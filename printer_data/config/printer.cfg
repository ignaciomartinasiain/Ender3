[include shell_command.cfg]
[include fluidd.cfg]
[include macros1.cfg]

[include menu.cfg]
# This file contains pin mappings for the stock 2020 Creality Ender 3
# Pro with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# serial (on USART1 PA10/PA9) communication.

# It should be noted that newer variations of this printer shipping in
# 2022 may have GD32F103 chips installed and not STM32F103. You may
# have to inspect the mainboard to ascertain which one you have. If it
# is the GD32F103 then please select Disable SWD at startup in the
# "make menuconfig" along with the same settings for STM32F103.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
#microsteps: 16
microsteps: 16

rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 1.8
position_max: 250#225
position_min: -10
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -4
position_max: 240#235
position_min: -10
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop#^PA7
#position_endstop: 0.0
position_max: 250
position_min: 0

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
#rotation_distance: 34.406 #anterior
rotation_distance: 31.946733695#32.4259347
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

pressure_advance: 0 #PLA=0.15 FLEX= PETG=

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 3000 #3000
#max_accel_to_decel: 10000 #agregado
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5 #agregado

# Pin mappings for BL_T port
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -45.4
y_offset: -6.4
#samples:
#speed:
#z_offset: 0.0
stow_on_each_sample: True
probe_with_touch_mode: False
pin_up_touch_mode_reports_triggered: False


[bed_mesh]
speed: 80
horizontal_move_z: 5
mesh_min: 4.6, 13.6
mesh_max: 204.6, 219#y=233.6
probe_count: 6, 6
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0
adaptive_margin: 5

[exclude_object]


[safe_z_home]
home_xy_position: 125,125
speed: 50
z_hop: 10
z_hop_speed: 5


[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2


[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu rpi]
serial: /tmp/klipper_host_mcu


#####################################################################
#  G Sensor definition
#####################################################################
[adxl345]
cs_pin: rpi:None
##  The SPI speed (in hz) to use when communicating with the chip.
##  The default is 5000000.
spi_speed: 5000000
## Output data rate for ADXL345. ADXL345 supports the following data
##  rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
## not recommended to change this rate from the default 3200, and
##  rates below 800 will considerably affect the quality of resonance
##  measurements.
rate: 800#800
##  The accelerometer axis for each of the printer's x, y, and z axes.
##  This may be useful if the accelerometer is mounted in an
##  orientation that does not match the printer orientation. For
##  example, one could set this to "y,x,z" to swap the x and y axes.
##  It is also possible to negate an axis if the accelerometer
##  direction is reversed (eg, "x,z,-y"). The default is "x,y,z".
##  receck
axes_map: x,y,z

#####################################################################
#  resonance tester definition
#####################################################################
[resonance_tester]
accel_chip: adxl345
##  A list of X,Y,Z coordinates of points (one point per line) to test
##  resonances at. At least one point is required. Make sure that all
##  points with some safety margin in XY plane (~a few centimeters)
##  are reachable by the toolhead.
probe_points:  
    125,125,20
#    175,175,160
#    175,175,300
##  Maximum input shaper smoothing to allow for each axis during shaper
##  auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
##  maximum smoothing is specified. Refer to Measuring_Resonances guide
##  for more details on using this feature.
#max_smoothing:
##  Minimum/Maximum frequency to test for resonances.
min_freq: 5
max_freq: 130
##  This parameter is used to determine which acceleration to use to
##  test a specific frequency: accel = accel_per_hz * freq. Higher the
##  value, the higher is the energy of the oscillations. Can be set to
##  a lower than the default value if the resonances get too strong on
##  the printer. However, lower values make measurements of
##  high-frequency resonances less precise. The default value is 75
##  (mm/sec).
accel_per_hz: 75
##  Determines the speed of the test. When testing all frequencies in
##  range [min_freq, max_freq], each second the frequency increases by
##  hz_per_sec. Small values make the test slow, and the large values
##  will decrease the precision of the test. The default value is 1.0
##  (Hz/sec == sec^-2).
hz_per_sec: 1

#####################################################################
#  input shaper  definition
#####################################################################
[input_shaper]
##  A frequency (in Hz) of the input shaper for X or Y axis. 
## V . N / D (Hz)
## Velocidad(maxima de perimetros externos en el laminador) x Numero de marcas de "ringing" / distancia medida entre la primer y ultima marca 
## 100 x 5 / 12 = Hz en X = 41.66
## 100 x 4 / 8.5 = Hz en Y = 47.05

shaper_freq_x: 41.66
shaper_freq_y: 47.05
##  A type of the intput shaper for X or Y axia.
shaper_type_x: mzv
shaper_type_y: mzv
##  Damping ratios of vibrations of X and Y axes used by input shapers
##  to improve vibration suppression. Default value is 0.1 which is a
##  good all-round value for most printers. In most circumstances this
##  parameter requires no tuning and should not be changed.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.920
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.035000, 0.077500, 0.037500, 0.067500, -0.020000, -0.055000
#*# 	  0.012500, 0.015000, 0.017500, 0.022500, -0.060000, -0.122500
#*# 	  0.075000, 0.005000, 0.045000, 0.025000, -0.042500, -0.132500
#*# 	  0.002500, -0.010000, 0.002500, -0.032500, -0.072500, -0.135000
#*# 	  -0.020000, -0.045000, -0.060000, -0.067500, -0.097500, -0.217500
#*# 	  -0.102500, -0.117500, -0.152500, -0.155000, -0.210000, -0.285000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 4.600000000000001
#*# max_x = 204.6
#*# min_y = 13.6
#*# max_y = 219.0
